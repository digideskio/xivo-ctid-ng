{
    "swagger": "2.0",
    "info": {
        "title": "XiVO CTId ng",
        "description": "Control your calls from a REST API",
        "version": "1.0.0"
    },
    "schemes": [
        "https"
    ],
    "basePath": "/1.0",
    "produces": [
        "application/json"
    ],
    "x-xivo-port": 9500,
    "x-xivo-name": "ctid-ng",
    "securityDefinitions": {
        "xivo_auth_token": {
            "type": "apiKey",
            "name": "X-Auth-Token",
            "in": "header"
        }
    },
    "security": [
        {
            "xivo_auth_token": []
        }
    ],
    "paths": {
        "/calls": {
            "get": {
                "summary": "List calls",
                "description": "**Required ACL:** `ctid-ng.calls.read`",
                "parameters": [
                    {
                        "name": "application",
                        "description": "Filter calls by Stasis application, e.g. switchboard.",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "application_instance",
                        "description": "Filter calls by Stasis application instance, e.g. switchboard-sales,green. Args must be separated by commas (,).",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "tags": [
                    "calls"
                ],
                "responses": {
                    "200": {
                        "description": "List currently active calls",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Call"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "$ref": "#/responses/AnotherServiceUnavailable"
                    }
                }
            },
            "post": {
                "summary": "Make a new call",
                "description": "**Required ACL:** `ctid-ng.calls.create`\n\nCreate a new call from a phone to an extension.\n",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Call parameters",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CallRequest"
                        }
                    }
                ],
                "tags": [
                    "calls"
                ],
                "responses": {
                    "201": {
                        "description": "The new call ID",
                        "schema": {
                            "$ref": "#/definitions/CallID"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "503": {
                        "$ref": "#/responses/AnotherServiceUnavailable"
                    }
                }
            }
        },
        "/calls/{call_id}": {
            "get": {
                "summary": "Show a call",
                "description": "**Required ACL:** `ctid-ng.calls.{call_id}.read`",
                "parameters": [
                    {
                        "name": "call_id",
                        "in": "path",
                        "description": "ID of the call",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "calls"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Call"
                        }
                    },
                    "404": {
                        "description": "No such call",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "503": {
                        "$ref": "#/responses/AnotherServiceUnavailable"
                    }
                }
            },
            "delete": {
                "summary": "Hangup a call",
                "description": "**Required ACL:** `ctid-ng.calls.{call_id}.delete`",
                "parameters": [
                    {
                        "name": "call_id",
                        "in": "path",
                        "description": "ID of the call",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "calls"
                ],
                "responses": {
                    "204": {
                        "description": "Call has been hung up"
                    },
                    "404": {
                        "description": "No such call",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "503": {
                        "$ref": "#/responses/AnotherServiceUnavailable"
                    }
                }
            }
        },
        "/calls/{call_id}/user/{user_uuid}": {
            "put": {
                "summary": "Connect a call to a user",
                "description": "**Required ACL:** `ctid-ng.calls.{call_id}.user.{user_uuid}.update`",
                "parameters": [
                    {
                        "name": "call_id",
                        "in": "path",
                        "description": "ID of the call",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user_uuid",
                        "in": "path",
                        "description": "UUID of the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "calls"
                ],
                "responses": {
                    "200": {
                        "description": "The new call of the user (ringing side)",
                        "schema": {
                            "$ref": "#/definitions/Call"
                        }
                    },
                    "503": {
                        "$ref": "#/responses/AnotherServiceUnavailable"
                    }
                }
            }
        },
        "/transfers": {
            "post": {
                "summary": "Initiate a transfer",
                "description": "**Required ACL:** `ctid-ng.transfers.create`\n\nThe only way to cancel the transfer from the initiator is to use `DELETE /transfers/<id>` (i.e. sending DTMF `*0` will not work).",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Parameters of the transfer",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TransferRequest"
                        }
                    }
                ],
                "tags": [
                    "transfers"
                ],
                "responses": {
                    "201": {
                        "description": "The transfer being created",
                        "schema": {
                            "$ref": "#/definitions/Transfer"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/InvalidRequest"
                    },
                    "503": {
                        "$ref": "#/responses/AnotherServiceUnavailable"
                    }
                }
            }
        },
        "/transfers/{transfer_id}": {
            "get": {
                "summary": "Get details of a transfer",
                "description": "**Required ACL:** `ctid-ng.transfers.{transfer_id}.read`",
                "parameters": [
                    {
                        "$ref": "#/parameters/TransferID"
                    }
                ],
                "tags": [
                    "transfers"
                ],
                "responses": {
                    "200": {
                        "description": "The details of the transfer",
                        "schema": {
                            "$ref": "#/definitions/Transfer"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/NoSuchTransfer"
                    },
                    "503": {
                        "$ref": "#/responses/AnotherServiceUnavailable"
                    }
                }
            },
            "delete": {
                "summary": "Cancel a transfer",
                "description": "**Required ACL:** `ctid-ng.transfers.{transfer_id}.delete`",
                "parameters": [
                    {
                        "$ref": "#/parameters/TransferID"
                    }
                ],
                "tags": [
                    "transfers"
                ],
                "responses": {
                    "204": {
                        "description": "Transfer cancelled"
                    },
                    "404": {
                        "$ref": "#/responses/NoSuchTransfer"
                    },
                    "503": {
                        "$ref": "#/responses/AnotherServiceUnavailable"
                    }
                }
            }
        },
        "/transfers/{transfer_id}/complete": {
            "put": {
                "summary": "Complete a transfer",
                "description": "**Required ACL:** `ctid-ng.transfers.{transfer_id}.complete.update`",
                "parameters": [
                    {
                        "$ref": "#/parameters/TransferID"
                    }
                ],
                "tags": [
                    "transfers"
                ],
                "responses": {
                    "204": {
                        "description": "The transfer was completed"
                    },
                    "404": {
                        "$ref": "#/responses/NoSuchTransfer"
                    },
                    "503": {
                        "$ref": "#/responses/AnotherServiceUnavailable"
                    }
                }
            }
        },
        "/hold/{holding_id}/calls": {
            "get": {
                "summary": "List calls in hold",
                "description": "List calls in hold",
                "parameters": [
                    {
                        "name": "holding_id",
                        "in": "path",
                        "description": "Holding ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "hold"
                ],
                "responses": {
                    "201": {
                        "description": "The new call ID",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/Call"
                            }
                        }
                    },
                    "404": {
                        "description": "No such call",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/Error"
                            }
                        }
                    },
                    "503": {
                        "$ref": "#/responses/AnotherServiceUnavailable"
                    }
                }
            }
        },
        "/hold/{holding_id}": {
            "post": {
                "summary": "Create waiting room",
                "description": "Create waiting room",
                "parameters": [
                    {
                        "name": "holding_id",
                        "in": "path",
                        "description": "Holding ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Call hold parameters",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/WaitingRoom"
                        }
                    }
                ],
                "tags": [
                    "hold"
                ],
                "responses": {
                    "201": {
                        "description": "The new call ID",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/Call"
                            }
                        }
                    },
                    "404": {
                        "description": "No such call",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/Error"
                            }
                        }
                    },
                    "503": {
                        "$ref": "#/responses/AnotherServiceUnavailable"
                    }
                }
            },
            "delete": {
                "summary": "Delete waiting room",
                "description": "Delete waiting room",
                "parameters": [
                    {
                        "name": "holding_id",
                        "in": "path",
                        "description": "Holding ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "hold"
                ],
                "responses": {
                    "200": {
                        "description": "Waiting room is destroyed"
                    },
                    "404": {
                        "description": "No such waiting call",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/Error"
                            }
                        }
                    },
                    "503": {
                        "$ref": "#/responses/AnotherServiceUnavailable"
                    }
                }
            }
        },
        "/hold/{holding_id}/calls/{call_id}": {
            "put": {
                "summary": "Hold a call in a bridge",
                "description": "Hold a call in a bridge",
                "parameters": [
                    {
                        "name": "holding_id",
                        "in": "path",
                        "description": "ID of the holding bridge",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "call_id",
                        "in": "path",
                        "description": "ID of the call",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "hold"
                ],
                "responses": {
                    "201": {
                        "description": "The new call ID",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/Call"
                            }
                        }
                    },
                    "404": {
                        "description": "No such call",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/Error"
                            }
                        }
                    },
                    "503": {
                        "$ref": "#/responses/AnotherServiceUnavailable"
                    }
                }
            }
        },
        "/incoming/{incoming_id}/calls": {
            "get": {
                "summary": "List incoming calls",
                "description": "List incoming calls",
                "parameters": [
                    {
                        "name": "incoming_id",
                        "in": "path",
                        "description": "Incoming ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "incoming"
                ],
                "responses": {
                    "201": {
                        "description": "The new call ID",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/Call"
                            }
                        }
                    },
                    "404": {
                        "description": "No such call",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/Error"
                            }
                        }
                    },
                    "503": {
                        "$ref": "#/responses/AnotherServiceUnavailable"
                    }
                }
            }
        },
        "/incoming/{incoming_id}/calls/{call_id}": {
            "put": {
                "summary": "Transfer a call to incoming room",
                "description": "Transfer a call to incoming",
                "parameters": [
                    {
                        "name": "incoming_id",
                        "in": "path",
                        "description": "ID of the incoming room",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "call_id",
                        "in": "path",
                        "description": "ID of the call",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "incoming"
                ],
                "responses": {
                    "201": {
                        "description": "The new call ID",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/Call"
                            }
                        }
                    },
                    "404": {
                        "description": "No such call",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/Error"
                            }
                        }
                    },
                    "503": {
                        "$ref": "#/responses/AnotherServiceUnavailable"
                    }
                }
            }
        },
        "/chat/": {
            "post": {
                "summary": "Send chat to user",
                "description": "Send chat to user",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Chat parameters",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChatRequest"
                        }
                    }
                ],
                "tags": [
                    "chat"
                ],
                "responses": {
                    "204": {
                        "description": "Message chat has been sent"
                    },
                    "503": {
                        "$ref": "#/responses/AnotherServiceUnavailable"
                    }
                }
            }
        },
        "/presence/": {
            "put": {
                "summary": "Update CTI presence",
                "description": "Update CTI presence",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Presence parameters",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PresenceRequest"
                        }
                    }
                ],
                "tags": [
                    "presence"
                ],
                "responses": {
                    "204": {
                        "description": "Presence has been updated"
                    },
                    "503": {
                        "$ref": "#/responses/AnotherServiceUnavailable"
                    }
                }
            }
        }
    },
    "responses": {
        "AnotherServiceUnavailable": {
            "description": "Another service is unavailable (e.g. xivo-auth, xivo-confd, Asterisk, ...)",
            "schema": {
                "$ref": "#/definitions/Error"
            }
        },
        "NoSuchTransfer": {
            "description": "The specified transfer does not exist",
            "schema": {
                "$ref": "#/definitions/Error"
            }
        },
        "InvalidRequest": {
            "description": "Invalid request",
            "schema": {
                "$ref": "#/definitions/Error"
            }
        }
    },
    "definitions": {
        "CallRequest": {
            "type": "object",
            "properties": {
                "destination": {
                    "description": "Destination parameters",
                    "type": "object",
                    "properties": {
                        "extension": {
                            "type": "string"
                        },
                        "context": {
                            "type": "string"
                        },
                        "priority": {
                            "type": "integer"
                        }
                    }
                },
                "source": {
                    "description": "Caller parameters",
                    "type": "object",
                    "properties": {
                        "user": {
                            "type": "string"
                        }
                    }
                },
                "variables": {
                    "description": "Channel variables to set",
                    "type": "object"
                }
            }
        },
        "Call": {
            "type": "object",
            "properties": {
                "call_id": {
                    "type": "string"
                },
                "user_uuid": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "talking_to": {
                    "$ref": "#/definitions/TalkingTo"
                },
                "bridges": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "creation_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "caller_id_name": {
                    "type": "string"
                },
                "caller_id_number": {
                    "type": "string"
                }
            }
        },
        "CallID": {
            "type": "object",
            "properties": {
                "call_id": {
                    "type": "string"
                }
            }
        },
        "Error": {
            "title": "Error",
            "description": "Error message for the client",
            "properties": {
                "message": {
                    "description": "Human readable explanation of the error",
                    "type": "string"
                },
                "error_id": {
                    "description": "Identifier of the type of error. It is more precise than the HTTP status code.",
                    "type": "string"
                },
                "details": {
                    "description": "Additional information about the error. The keys are specific to each error.",
                    "type": "object"
                },
                "timestamp": {
                    "description": "Time when the error occured",
                    "type": "number",
                    "format": "timestamp"
                }
            }
        },
        "TalkingTo": {
            "type": "object",
            "properties": {
                "{channel_id}": {
                    "type": "string"
                }
            }
        },
        "TransferRequest": {
            "type": "object",
            "properties": {
                "transferred_call": {
                    "description": "Call ID of the call being transferred to someone else",
                    "type": "string"
                },
                "initiator_call": {
                    "description": "Call ID of the transfer initiator",
                    "type": "string"
                },
                "context": {
                    "description": "Context of the recipient of the transfer",
                    "type": "string"
                },
                "exten": {
                    "description": "Extension of the recipient of the transfer",
                    "type": "string"
                },
                "flow": {
                    "description": "Behavior of the transfer. `attended` allows the initiator to talk to the recipient. `blind` does not.",
                    "type": "string",
                    "default": "attended",
                    "enum": [
                        "attended",
                        "blind"
                    ]
                }
            }
        },
        "Transfer": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique identifier of the transfer",
                    "type": "string"
                },
                "transferred_call": {
                    "description": "Call ID of the call being transferred to someone else",
                    "type": "string"
                },
                "initiator_call": {
                    "description": "Call ID of the transfer initiator",
                    "type": "string"
                },
                "recipient_call": {
                    "description": "Call ID of the recipient of the transfer. May be null when the transfer is 'starting'.",
                    "type": "string"
                },
                "status": {
                    "description": "The current step of the transfer",
                    "type": "string",
                    "enum": [
                        "starting",
                        "ringback",
                        "answered"
                    ]
                },
                "flow": {
                    "description": "The behavior of the transfer",
                    "type": "string",
                    "enum": [
                        "attended",
                        "blind"
                    ]
                }
            }
        },
        "WaitingRoom": {
            "type": "object",
            "properties": {
                "moh": {
                    "description": "Music on hold",
                    "type": "string"
                }
            }
        },
        "ChatRequest": {
            "type": "object",
            "properties": {
                "from": {
                    "description": "From parameters",
                    "type": "string"
                },
                "to": {
                    "description": "To parameters",
                    "type": "string"
                },
                "msg": {
                    "description": "Message parameters",
                    "type": "string"
                },
                "alias": {
                    "description": "Alias parameters",
                    "type": "string"
                }
            }
        },
        "PresenceRequest": {
            "type": "object",
            "properties": {
                "user_id": {
                    "description": "User ID",
                    "type": "string"
                },
                "status_name": {
                    "description": "Presence status name (ex. available)",
                    "type": "string"
                }
            }
        }
    },
    "parameters": {
        "TransferID": {
            "name": "transfer_id",
            "in": "path",
            "description": "Unique identifier of the transfer",
            "required": true,
            "type": "string"
        }
    }
}
